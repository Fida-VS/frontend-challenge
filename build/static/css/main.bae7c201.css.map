{"version":3,"file":"static/css/main.bae7c201.css","mappings":"AAGC,iBAGE,qBACF,CAMA,6BACE,cACF,CAMA,8CAGE,qBAAsB,CACtB,UAAW,CAFX,QAGF,CAMA,oDAYE,cACF,CAEA,kBACE,aACF,CAEA,wBAGE,WAAY,CAFZ,aAAc,CACd,SAEF,CAMA,kBACE,eACF,CAEA,uBACE,iBACF,CAOA,EACE,4BAA6B,CAE7B,cACF,CAMA,wCACE,0CACF,CAMA,IACE,aAAc,CACd,cACF,CAKA,6BAIE,YACF,CAEA,KAKE,WACF,CAKA,mBAEE,sBACF,CAEA,KASE,eAAgB,CAJhB,eAKF,CAKA,WAAc,iBAAmB,CACjC,aAAgB,mBAAqB,CAKrC,MACE,+BACF,CClJD,kBACI,qBACJ","sources":["index.css","pages/main/main.module.css"],"sourcesContent":["/* *\n  Нормализация блочной модели\n */\n *,\n ::before,\n ::after {\n   box-sizing: border-box;\n }\n \n /**\n   Убираем внутренние отступы слева тегам списков,\n   у которых есть атрибут class\n  */\n :where(ul, ol):where([class]) {\n   padding-left: 0;\n }\n \n /**\n   Убираем внешние отступы body и двум другим тегам,\n   у которых есть атрибут class\n  */\n body,\n :where(blockquote, figure):where([class]) {\n   margin: 0;\n   background-color: #fff;\n   color: #000;\n }\n \n /**\n   Убираем внешние отступы вертикали нужным тегам,\n   у которых есть атрибут class\n  */\n :where(\n   h1,\n   h2,\n   h3,\n   h4,\n   h5,\n   h6,\n   p,\n   ul,\n   ol,\n   dl\n ):where([class]) {\n   margin-block: 0;\n }\n \n :where(dd[class]) {\n   margin-left: 0;\n }\n \n :where(fieldset[class]) {\n   margin-left: 0;\n   padding: 0;\n   border: none;\n }\n \n /**\n   Убираем стандартный маркер маркированному списку,\n   у которого есть атрибут class\n  */\n :where(ul[class]) {\n   list-style: none;\n }\n \n :where(address[class]) {\n   font-style: normal;\n }\n \n /**\n   Обнуляем вертикальные внешние отступы параграфа,\n   объявляем локальную переменную для внешнего отступа вниз,\n   чтобы избежать взаимодействие с более сложным селектором\n  */\n p {\n   --paragraphMarginBottom: 24px;\n \n   margin-block: 0;\n }\n \n /**\n   Внешний отступ вниз для параграфа без атрибута class,\n   который расположен не последним среди своих соседних элементов\n  */\n p:where(:not([class]):not(:last-child)) {\n   margin-bottom: var(--paragraphMarginBottom);\n }\n \n \n /**\n   Упрощаем работу с изображениями\n  */\n img {\n   display: block;\n   max-width: 100%;\n }\n \n /**\n   Наследуем свойства шрифт для полей ввода\n  */\n input,\n textarea,\n select,\n button {\n   font: inherit;\n }\n \n html {\n   /**\n     Пригодится в большинстве ситуаций\n     (когда, например, нужно будет \"прижать\" футер к низу сайта)\n    */\n   height: 100%;\n }\n \n /**\n   Плавный скролл\n  */\n html,\n :has(:target) {\n   scroll-behavior: smooth;\n }\n \n body {\n   /**\n     Пригодится в большинстве ситуаций\n     (когда, например, нужно будет \"прижать\" футер к низу сайта)\n    */\n   min-height: 100%;\n   /**\n     Унифицированный интерлиньяж\n    */\n   line-height: 1.5;\n }\n \n /**\n   Приводим к единому цвету svg-элементы\n  */\n svg *[fill] { fill: currentColor }\n svg *[stroke] { stroke: currentColor }\n \n /**\n   Чиним баг задержки смены цвета при взаимодействии с svg-элементами\n  */\n svg * {\n   transition-property: fill, stroke;\n }\n \n ",".main {\r\n    background-color: #fff;\r\n}"],"names":[],"sourceRoot":""}